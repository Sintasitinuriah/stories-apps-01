@use '../abstracts/variables' as var;
@use '../abstracts/mixins' as mix;
@use 'sass:map';
 
main .stories .main-stories .story-list {
  display: grid;
  grid-template-columns: repeat(3, minmax(100px, 1fr));
  justify-content: space-evenly;
  gap: 16px;
 
 
  .card {
    padding: 0;
    position: relative;
 
 
    .card-image {
      @include mix.full-size;
      max-height: 325px;
 
 
      img {
        @include mix.full-size;
        @include mix.cover-center-image;
 
 
        border-radius: var.$secondary-border-radius;
 
 
        transition: 0.3s ease-in-out;
      }
    }
 
 
    .card-body.floating {
      @include mix.floating-object($is-full-width: true, $is-full-height: true);
      @include mix.centering-using-flex($flex-dir: column);
 
 
      background-color: #ffffff77;
      border-radius: var.$secondary-border-radius;
 
 
      scale: 0;
      animation: hover-story-disappear 0.5s ease-in-out;
 
 
      .title {
        margin-block: 1rem;
        font-size: 1.5rem;
      }
 
 
      .social-medias {
        display: flex;
        justify-content: center;
        gap: 8px;
 
 
        .social-media-link {
          font-size: 2rem;
        }
      }
    }
 
 
    &:hover .card-body.floating {
      background-color: #ffffff77;
 
 
      scale: 1;
      animation: hover-story-appear 0.35s ease-in-out;
    }
  }
}
 
 
/* MD: minimum viewport width 768px or above */
@media screen and (min-width: map.get(var.$breakpoints, 'md')) {
  main .stories .main-stories .story-list {
    grid-template-columns: repeat(2, minmax(100px, 1fr));
    gap: 24px;
  }
}
 
 
/* LG: minimum viewport width 992px or above */
@media screen and (min-width: map.get(var.$breakpoints, 'lg')) {
  main .stories .main-stories .story-list {
    gap: 32px;
  }
}
 
 
/* XL: minimum viewport width 1200px or above */
@media screen and (min-width: map.get(var.$breakpoints, 'xl')) {
  main .stories .main-stories .story-list {
    grid-template-columns: repeat(3, minmax(100px, 1fr));
  }
}